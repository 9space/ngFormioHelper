!function e(r,o,n){function s(t,a){if(!o[t]){if(!r[t]){var u="function"==typeof require&&require;if(!a&&u)return u(t,!0);if(i)return i(t,!0);var l=new Error("Cannot find module '"+t+"'");throw l.code="MODULE_NOT_FOUND",l}var m=o[t]={exports:{}};r[t][0].call(m.exports,function(e){var o=r[t][1][e];return s(o?o:e)},m,m.exports,e,r,o,n)}return o[t].exports}for(var i="function"==typeof require&&require,t=0;t<n.length;t++)s(n[t]);return s}({1:[function(e,r,o){"use strict";angular.module("ngFormioHelper",["formio","ngFormioGrid","ui.router"]).filter("capitalize",[function(){return _.capitalize}]).filter("truncate",[function(){return function(e,r){return _.isNumber(r)&&(r={length:r}),_.truncate(e,r)}}]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(e,r){r.bind("change",function(r){var o=new FileReader;o.onloadend=function(r){e.$apply(function(){e.fileread=jQuery(r.target.result)})},o.readAsText(r.target.files[0])})}}}]).provider("FormioResource",["$stateProvider",function(e){var r={};return{register:function(o,n,s){s=s||{},r[o]=s.title||o;var i=s&&s.parent?s.parent:null,t=s&&s.parents?s.parents:[];t&&t.length||!i||(t=[i]);var a=o+"Id";s.base=s.base||"";var u=s.base+o,l=function(e){var r={};return r[a]=e._id,r},m=function(e){return e};s.alter=angular.extend({index:m,create:m,"abstract":m,view:m,edit:m,"delete":m},s.alter);var c=s&&s.templates?s.templates:{},f=s&&s.controllers?s.controllers:{},p=s.query?s.query:"";e.state(u+"Index",s.alter.index({url:"/"+o+p,params:s.params&&s.params.index,templateUrl:c.index?c.index:"formio-helper/resource/index.html",controller:["$scope","$state","$stateParams","$controller",function(e,r,s,i){e.baseName=u;var m={};t.length&&t.forEach(function(e){s.hasOwnProperty(e+"Id")&&(m["data."+e+"._id"]=s[e+"Id"])}),e.currentResource={name:o,queryId:a,formUrl:n,columns:[],gridQuery:m,gridOptions:{}},e.$on("rowView",function(e,o){r.go(u+".view",l(o))}),e.$on("submissionView",function(e,o){r.go(u+".view",l(o))}),e.$on("submissionEdit",function(e,o){r.go(u+".edit",l(o))}),e.$on("submissionDelete",function(e,o){r.go(u+".delete",l(o))}),f.index&&i(f.index,{$scope:e})}]})).state(u+"Create",s.alter.create({url:"/create/"+o+p,params:s.params&&s.params.create,templateUrl:c.create?c.create:"formio-helper/resource/create.html",controller:["$scope","$state","$controller",function(e,r,i){e.baseName=u,e.currentResource={name:o,queryId:a,formUrl:n},e.submission=s.defaultValue?s.defaultValue:{data:{}},e.pageTitle="New "+_.capitalize(o);var m=!1;if(f.create){var c=i(f.create,{$scope:e});m=c.handle||!1}t.length&&(e.hideComponents||(e.hideComponents=[]),e.hideComponents=e.hideComponents.concat(t),t.forEach(function(r){e[r].loadSubmissionPromise.then(function(o){e.submission.data[r]=o})})),m||e.$on("formSubmission",function(o,n){e.currentResource.resource=n,r.go(u+".view",l(n))})}]})).state(u,s.alter["abstract"]({"abstract":!0,url:"/"+o+"/:"+a,templateUrl:c["abstract"]?c["abstract"]:"formio-helper/resource/resource.html",controller:["$scope","$stateParams","Formio","$controller","$http",function(e,r,i,l,m){var c=n,p=s.endpoint;p?p+="/"+r[a]:c+="/submission/"+r[a],e.baseName=u,e.currentResource=e[o]={name:o,queryId:a,formUrl:n,submissionUrl:c,formio:new i(c),resource:{},form:{},href:"/#/"+o+"/"+r[a]+"/",parent:1===t.length?e[t[0]]:{href:"/#/",name:"home"}},e.currentResource.loadFormPromise=e.currentResource.formio.loadForm().then(function(r){return e.currentResource.form=e[o].form=r,r}),s.endpoint?e.currentResource.loadSubmissionPromise=m.get(p,{headers:{"x-jwt-token":i.getToken()}}).then(function(r){return e.currentResource.resource=r.data,r.data}):e.currentResource.loadSubmissionPromise=e.currentResource.formio.loadSubmission().then(function(r){return e.currentResource.resource=e[o].submission=r,r}),f["abstract"]&&l(f["abstract"],{$scope:e})}]})).state(u+".view",s.alter.view({url:"/",params:s.params&&s.params.view,templateUrl:c.view?c.view:"formio-helper/resource/view.html",controller:["$scope","$controller",function(e,r){f.view&&r(f.view,{$scope:e})}]})).state(u+".edit",s.alter.edit({url:"/edit",params:s.params&&s.params.edit,templateUrl:c.edit?c.edit:"formio-helper/resource/edit.html",controller:["$scope","$state","$controller",function(e,r,o){var n=!1;if(t.length&&(e.hideComponents||(e.hideComponents=[]),e.hideComponents=e.hideComponents.concat(t)),f.edit){var s=o(f.edit,{$scope:e});n=s.handle||!1}n||e.$on("formSubmission",function(o,n){e.currentResource.resource=n,r.go(u+".view",l(n))})}]})).state(u+".delete",s.alter["delete"]({url:"/delete",params:s.params&&s.params["delete"],templateUrl:c["delete"]?c["delete"]:"formio-helper/resource/delete.html",controller:["$scope","$state","$controller",function(e,r,n){var s=!1;if(e.resourceName=o,f["delete"]){var i=n(f["delete"],{$scope:e});s=i.handle||!1}s||(e.$on("delete",function(){1===t.length&&"home"!==t[0]?r.go(t[0]+".view"):r.go("home",null,{reload:!0})}),e.$on("cancel",function(){r.go(u+"Index")}))}]}))},$get:function(){return r}}}]).directive("formioForms",function(){return{restrict:"E",replace:!0,scope:{src:"=",base:"=",tag:"=?"},templateUrl:"formio-helper/form/list.html",controller:["$scope","Formio",function(e,r){e.forms=[];var o={type:"form",limit:9999999},n=function(){e.src&&(e.tag&&(o.tags=e.tag),new r(e.src).loadForms({params:o}).then(function(r){e.forms=r}))};e.$watch("src",n)}]}}).provider("FormioForms",["$stateProvider",function(e){var r={};return{register:function(r,o,n){n=n||{};var s=n.templates?n.templates:{},i=n.controllers?n.controllers:{},t="string"==typeof n.field?[n.field]:n.field;t=_.map(t,function(e){return"string"==typeof e?{name:e,stateParam:e+"Id"}:e});var a=n.base?n.base:"";a||(a=r?r+".":""),e.state(a+"formIndex",{url:"/forms",params:n.params&&n.params.index,templateUrl:s.index?s.index:"formio-helper/form/index.html",controller:["$scope","Formio","$controller",function(e,r,s){e.formBase=a,e.formsSrc=o+"/form",e.formsTag=e.formsTag||n.tag,i.index&&s(i.index,{$scope:e})}]}).state(a+"form",{url:"/form/:formId","abstract":!0,templateUrl:s.form?s.form:"formio-helper/form/form.html",controller:["$scope","$stateParams","Formio","$controller",function(e,n,s,t){var u=o+"/form/"+n.formId;e.formBase=a,e.currentForm={name:r,url:u,form:{}},e.currentForm.formio=new s(u),e.currentForm.promise=e.currentForm.formio.loadForm().then(function(r){return e.currentForm.form=r,r}),i.form&&t(i.form,{$scope:e})}]}).state(a+"form.view",{url:"/",params:n.params&&n.params.view,templateUrl:s.view?s.view:"formio-helper/form/view.html",controller:["$scope","$state","FormioUtils","$controller",function(e,r,o,n){e.submission={data:{}};var s=!1;if(t&&t.length&&(e.hideComponents=_.map(t,function(e){return e.name}),e.currentForm.promise.then(function(){t.forEach(function(r){var o=r.name.split("."),n=o[o.length-1];e[n].loadSubmissionPromise.then(function(o){_.set(e.submission.data,r.name,o)})})})),i.view){var u=n(i.view,{$scope:e});s=u.handle||!1}s||e.$on("formSubmission",function(){r.go(a+"form.submissions")})}]}).state(a+"form.submissions",{url:"/submissions",params:n.params&&n.params.submissions,templateUrl:s.submissions?s.submissions:"formio-helper/submission/index.html",controller:["$scope","$state","$stateParams","FormioUtils","$controller",function(e,r,o,n,s){e.submissionQuery={},e.submissionColumns=[],t&&t.length&&t.forEach(function(r){e.submissionQuery["data."+r.name+"._id"]=o[r.stateParam]}),e.$on("rowView",function(e,o){r.go(a+"form.submission.view",{formId:o.form,submissionId:o._id})}),i.submissions&&s(i.submissions,{$scope:e}),e.currentForm.promise.then(function(r){localStorage.setItem(r.name,""),e.submissionColumns.length||0!==!Object.keys(e.submissionColumns).length||(n.eachComponent(r.components,function(r){r.key&&r.input&&r.tableView&&(t&&t.length&&!_.find(t,{name:r.key})||e.submissionColumns.push(r.key))}),e.$broadcast("reloadGrid"))})}]}).state(a+"form.submission",{"abstract":!0,url:"/submission/:submissionId",params:n.params&&n.params.submission,templateUrl:s.submission?s.submission:"formio-helper/submission/submission.html",controller:["$scope","$stateParams","Formio","$controller",function(e,r,o,n){e.currentSubmission={url:e.currentForm.url+"/submission/"+r.submissionId,submission:{data:{}}},e.currentSubmission.formio=new o(e.currentSubmission.url),e.currentSubmission.promise=e.currentSubmission.formio.loadSubmission().then(function(r){return e.currentSubmission.submission=r,r}),i.submission&&n(i.submission,{$scope:e})}]}).state(a+"form.submission.view",{url:"/",params:n.params&&n.params.submissionView,templateUrl:s.submissionView?s.submissionView:"formio-helper/submission/view.html",controller:["$scope","$controller",function(e,r){i.submissionView&&r(i.submissionView,{$scope:e})}]}).state(a+"form.submission.edit",{url:"/edit",params:n.params&&n.params.submissionEdit,templateUrl:s.submissionEdit?s.submissionEdit:"formio-helper/submission/edit.html",controller:["$scope","$state","$controller",function(e,r,o){var n=!1;if(i.submissionEdit){var s=o(i.submissionEdit,{$scope:e});n=s.handle||!1}n||e.$on("formSubmission",function(o,n){e.currentSubmission.submission=n,r.go(a+"form.submission.view")})}]}).state(a+"form.submission.delete",{url:"/delete",params:n.params&&n.params.submissionDelete,templateUrl:s.submissionDelete?s.submissionDelete:"formio-helper/submission/delete.html",controller:["$scope","$state","$controller",function(e,r,o){var n=!1;if(i.submissionDelete){var s=o(i.submissionDelete,{$scope:e});n=s.handle||!1}n||(e.$on("delete",function(){r.go(a+"form.submissions")}),e.$on("cancel",function(){r.go(a+"form.submission.view")}))}]})},$get:function(){return r}}}]).directive("offlineButton",function(){return{restrict:"E",replace:!0,scope:!1,templateUrl:"formio-helper/offline/button.html"}}).provider("FormioOffline",["$stateProvider",function(e){return{register:function(r){r=r||{},e.state("offline",{url:r.errorUrl||"/offline/error",templateUrl:"formio-helper/offline/index.html",params:{currentSubmission:{}},controller:["$scope","$stateParams","$rootScope","$state",function(e,o,n,s){e.currentSubmission=o.currentSubmission,e.submitSubmission=function(){n.offline.dequeueSubmissions(),s.go(r.homeState||"home")},e.cancelSubmission=function(){n.offline.skipNextQueuedSubmission(),n.offline.dequeueSubmissions()}}]})},$get:["Formio","FormioAlerts","$rootScope","AppConfig","$window",function(e,r,o,n,s){return{init:function(){o.appVersion=n.appVersion,o.offline=new FormioOfflineProject(n.appUrl,"project.json"),e.registerPlugin(o.offline,"offline"),o.offline.onError=function(e){r.addAlert({type:"danger",message:"Failed to save offline cache. This could result in missing data."})},e.events.on("offline.formError",function(e,o){r.addAlert({message:e,type:"danger"}),$state.go("offline",{currentSubmission:o})});var i=s.applicationCache,t=_.debounce(function(){i.update()},6e4);i&&(i.addEventListener("updateready",function(){i.status==i.UPDATEREADY&&confirm("A new version of the application is available. Would you like to load it?")&&(i.swapCache(),s.location.reload())},!1),o.$on("$stateChangeStart",function(){i.status!==i.UNCACHED&&i.status!==i.OBSOLETE&&t()}))}}}]}}]).provider("FormioAuth",["$stateProvider","FormioProvider",function(e,r){var o=!1,n="auth.login",s=!1,i="home",t=[],a=!1,u={},l={};return{setForceAuth:function(e){t="boolean"==typeof e?e?["auth"]:[]:e},setStates:function(e,r){n=e,i=r},setAnonRole:function(e){s=e},setAppUrl:function(e){r.setAppUrl(e)},register:function(r,o,n,s,t){var u=s&&!t;a||(a=!0,e.state("auth",{"abstract":!0,url:"/auth",templateUrl:u?"formio-helper/auth/auth.html":"views/user/auth.html"})),n||(n=r);var l=r.toLowerCase()+".html";e.state("auth."+r,{url:"/"+n,parent:"auth",templateUrl:u?"formio-helper/auth/"+l:"views/user/"+l,controller:["$scope","$state","$rootScope",function(e,r,n){e.currentForm=s,e.$on("formSubmission",function(e,s){s&&(n.setUser(s,o),r.go(i))})}]})},$get:["Formio","FormioAlerts","$rootScope","$state","$stateParams","$http","$q",function(e,r,i,a,m,c,f){return{init:function(){o=!0,i.accessPromise=e.makeStaticRequest(e.getAppUrl()+"/access").then(function(e){return angular.forEach(e.forms,function(e){u[e.name]={},e.submissionAccess.forEach(function(r){u[e.name][r.type]=r.roles})}),l=e.roles,e},function(e){return l={},null}),i.user=null,i.isReady=!1,i.userPromise=e.currentUser().then(function(e){return i.setUser(e,localStorage.getItem("formioRole")),e}),i.hasRole=function(e){return e=e.toLowerCase(),i.user?l[e]?-1!==i.user.roles.indexOf(l[e]._id):!1:"anonymous"===e},i.ifRole=function(e){return i.whenReady.then(function(){return i.isAdmin||i.hasRole(e)})},i.assignRoles=function(){if(!l)return i.isAdmin=!1,!1;for(var e in l)if(l[e].admin&&(i["is"+l[e].title.replace(/\s/g,"")]=i.isAdmin=i.hasRole(e),i.isAdmin))break;for(var e in l)l[e].admin||(i["is"+l[e].title.replace(/\s/g,"")]=i.hasRole(e))},i.whenReady=i.accessPromise.then(i.userPromise).then(function(){return i.isReady=!0,i.assignRoles(),!0}),i.isRole=function(e){return i.role===e.toLowerCase()},i.setUser=function(r,o){r?(i.user=r,localStorage.setItem("formioAppUser",angular.toJson(r))):(i.user=null,localStorage.removeItem("formioAppUser"),e.clearCache(),e.setUser(null)),o?(i.role=o.toLowerCase(),localStorage.setItem("formioAppRole",o)):(i.role=null,localStorage.removeItem("formioAppRole")),i.authenticated=!!e.getToken(),i.assignRoles(),i.$emit("user",{user:i.user,role:i.role})},i.hasAccess=function(e,r){if(!o)return!0;if(Array.isArray(r)||(r=[r]),!u[e])return!1;var n=!1;return r.forEach(function(r){i.user?i.user.roles.forEach(function(o){-1!==u[e][r].indexOf(o)&&(n=!0)}):-1!==u[e][r].indexOf(s)&&(n=!0)}),n},i.ifAccess=function(e,r){return i.whenReady.then(function(){return i.hasAccess(e,r)})};var c=function(){i.setUser(null,null),localStorage.removeItem("formioToken"),a.go(n,m,{reload:!0,inherit:!1,notify:!0}),r.addAlert({type:"danger",message:"Your session has expired. Please log in again."})};i.$on("formio.sessionExpired",c),e.events.on("formio.badToken",c),e.events.on("formio.sessionExpired",c),i.logout=function(){i.setUser(null,null),localStorage.removeItem("formioToken"),e.logout().then(function(){a.go(n,m,{reload:!0,inherit:!1,notify:!0})})["catch"](c)},i.$on("$stateChangeStart",function(r,o){if(i.authenticated=!!e.getToken(),!i.authenticated&&t.length){var s=!1;for(var u in t)if(0===o.name.indexOf(t[u])){s=!0;break}if(s)return;r.preventDefault(),a.go(n,{},{reload:!0})}}),i.$on("$stateChangeSuccess",function(){i.alerts=r.getAlerts()})}}}]}}]).factory("FormioAlerts",["$rootScope",function(e){var r=[];return{addAlert:function(o){e.alerts.push(o),o.element?angular.element("#form-group-"+o.element).addClass("has-error"):r.push(o)},getAlerts:function(){var e=angular.copy(r);return r.length=0,r=[],e},onError:function o(e){if(e.message)this.addAlert({type:"danger",message:e.message,element:e.path});else{var r=e.hasOwnProperty("errors")?e.errors:e.data.errors;angular.forEach(r,o.bind(this))}}}}]).run(["$templateCache","$rootScope","$state",function(e,r,o){r.isActive=function(e){return-1!==o.current.name.indexOf(e)},e.put("formio-helper/auth/auth.html",'<div class="col-md-8 col-md-offset-2">\n    <div class="panel panel-default">\n        <div class="panel-heading" style="padding-bottom: 0; border-bottom: none;">\n            <ul class="nav nav-tabs" style="border-bottom: none;">\n                <li role="presentation" ng-class="{active:isActive(\'auth.login\')}"><a ui-sref="auth.login()">Login</a></li>\n                <li role="presentation" ng-class="{active:isActive(\'auth.register\')}"><a ui-sref="auth.register()">Register</a></li>\n            </ul>\n        </div>\n        <div class="panel-body">\n            <div class="row">\n                <div class="col-lg-12">\n                    <div ui-view></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n'),e.put("formio-helper/auth/login.html",'<formio src="currentForm" formio-options="{skipQueue: true}"></formio>'),e.put("formio-helper/auth/register.html",'<formio src="currentForm" formio-options="{skipQueue: true}"></formio>\n'),e.put("formio-helper/resource/resource.html",'<h2>{{ currentResource.name | capitalize }}</h2>\n<ul class="nav nav-tabs" ng-if="isReady">\n  <li role="presentation" ng-class="{active:isActive(currentResource.name + \'.view\')}" ng-if="hasAccess(currentResource.name, [\'read_all\', \'read_own\'])"><a ui-sref="{{ baseName }}.view()">View</a></li>\n  <li role="presentation" ng-class="{active:isActive(currentResource.name + \'.edit\')}" ng-if="hasAccess(currentResource.name, [\'update_all\', \'update_own\'])"><a ui-sref="{{ baseName }}.edit()">Edit</a></li>\n  <li role="presentation" ng-class="{active:isActive(currentResource.name + \'.delete\')}" ng-if="hasAccess(currentResource.name, [\'delete_all\', \'delete_own\'])"><a ui-sref="{{ baseName }}.delete()">Delete</a></li>\n</ul>\n<div ui-view></div>\n'),e.put("formio-helper/resource/create.html",'<h3 ng-if="pageTitle">{{ pageTitle }}</h3>\n<hr ng-if="pageTitle"></hr>\n<formio src="currentResource.formUrl" submission="submission" hide-components="hideComponents"></formio>\n'),e.put("formio-helper/resource/delete.html",'<formio-delete src="currentResource.submissionUrl" resource-name="resourceName"></formio-delete>\n'),e.put("formio-helper/resource/edit.html",'<formio src="currentResource.submissionUrl" hide-components="hideComponents"></formio>\n'),e.put("formio-helper/resource/index.html",'<formio-grid src="currentResource.formUrl" columns="currentResource.columns" query="currentResource.gridQuery" grid-options="currentResource.gridOptions"></formio-grid><br/>\n<a ui-sref="{{ baseName }}Create()" class="btn btn-primary" ng-if="isReady && hasAccess(currentResource.name, \'create_own\')"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New {{ currentResource.name | capitalize }}</a>\n'),e.put("formio-helper/resource/view.html",'<formio src="currentResource.submissionUrl" read-only="true"></formio>\n'),e.put("formio-helper/form/list.html",'<ul class="list-group">\n    <li class="list-group-item" ng-repeat="form in forms | orderBy: \'title\'"><a ui-sref="{{ base }}form.view({formId: form._id})">{{ form.title }}</a></li>\n</ul>\n'),e.put("formio-helper/form/index.html",'<formio-forms src="formsSrc" tag="formsTag" base="formBase"></formio-forms>\n'),e.put("formio-helper/form/form.html",'<ul class="nav nav-tabs">\n    <li role="presentation" ng-class="{active:isActive(formBase + \'form.view\')}"><a ui-sref="{{ formBase }}form.view()">Form</a></li>\n    <li role="presentation" ng-class="{active:isActive(formBase + \'form.submissions\')}"><a ui-sref="{{ formBase }}form.submissions()">Submissions</a></li>\n</ul>\n<div ui-view style="margin-top:20px;"></div>\n'),e.put("formio-helper/form/view.html",'<formio form="currentForm.form" form-action="currentForm.url + \'/submission\'" submission="submission" hide-components="hideComponents"></formio>\n'),e.put("formio-helper/submission/index.html",'<formio-grid src="currentForm.url" query="submissionQuery" columns="submissionColumns"></formio-grid>\n\n'),e.put("formio-helper/submission/submission.html",'<ul class="nav nav-pills">\n  <li role="presentation" ng-class="{active:isActive(formBase + \'form.submission.view\')}"><a ui-sref="{{ formBase }}form.submission.view()">View</a></li>\n  <li role="presentation" ng-class="{active:isActive(formBase + \'form.submission.edit\')}"><a ui-sref="{{ formBase }}form.submission.edit()">Edit</a></li>\n  <li role="presentation" ng-class="{active:isActive(formBase + \'form.submission.delete\')}"><a ui-sref="{{ formBase }}form.submission.delete()">Delete</a></li>\n</ul>\n<div ui-view style="margin-top:20px;"></div>\n'),e.put("formio-helper/submission/view.html",'<formio form="currentForm.form" submission="currentSubmission.submission" read-only="true"></formio>\n'),e.put("formio-helper/submission/edit.html",'<formio form="currentForm.form" submission="currentSubmission.submission" form-action="currentSubmission.url"></formio>\n'),e.put("formio-helper/submission/delete.html",'<formio-delete src="currentSubmission.url"></formio-delete>\n'),e.put("formio-helper/offline/index.html",'<div>\n    <h2>The following submission had an error. Please correct it and resubmit.</h2>\n    <formio src="currentSubmission.url" submission="currentSubmission.data" hide-components="[\'submit\']"></formio>\n    <a class="btn btn-lg btn-info" ng-click="submitSubmission()">Retry</a>\n    <a class="btn btn-lg btn-warning" ng-click="cancelSubmission()">Cancel Submission</a>\n</div>'),e.put("formio-helper/offline/button.html",'<div class="offline-button">\n    <span class="navbar-text" ng-click="offline.forceOffline(!offline.isForcedOffline())" style="cursor:pointer;"><i class="glyphicon glyphicon-signal text-success" ng-class="{ \'text-danger\': (offline.isForcedOffline() || !offline.enabled), \'text-warning\' : offline.offline }"></i></span>\n    <span ng-if="offline.submissionQueueLength()" ng-click="offline.dequeueSubmissions()" class="navbar-text" style="cursor:pointer;">\n        <span class="badge">{{ offline.submissionQueueLength() }} Queued</span> <i class="glyphicon glyphicon-refresh" ng-class="{ \'glyphicon-spin\': offline.dequeuing }"></i>\n    </span>\n</div>')}])},{}]},{},[1]);