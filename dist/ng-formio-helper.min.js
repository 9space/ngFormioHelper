!function e(r,o,s){function t(i,a){if(!o[i]){if(!r[i]){var u="function"==typeof require&&require;if(!a&&u)return u(i,!0);if(n)return n(i,!0);var m=new Error("Cannot find module '"+i+"'");throw m.code="MODULE_NOT_FOUND",m}var l=o[i]={exports:{}};r[i][0].call(l.exports,function(e){var o=r[i][1][e];return t(o?o:e)},l,l.exports,e,r,o,s)}return o[i].exports}for(var n="function"==typeof require&&require,i=0;i<s.length;i++)t(s[i]);return t}({1:[function(e,r,o){"use strict";angular.module("ngFormioHelper",["formio","ngFormioGrid","ui.router"]).filter("capitalize",[function(){return _.capitalize}]).filter("truncate",[function(){return function(e,r){return _.isNumber(r)&&(r={length:r}),_.truncate(e,r)}}]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(e,r){r.bind("change",function(r){var o=new FileReader;o.onloadend=function(r){e.$apply(function(){e.fileread=jQuery(r.target.result)})},o.readAsText(r.target.files[0])})}}}]).provider("FormioResource",["$stateProvider",function(e){var r={};return{register:function(o,s,t){t=t||{},r[o]=t.title||o;var n=t&&t.parent?t.parent:null,i=t&&t.parents?t.parents:[];i&&i.length||!n||(i=[n]);var a=o+"Id";t.base=t.base||"";var u=t.base+o,m=function(e){var r={};return r[a]=e._id,r},l=function(e){return e};t.alter=angular.extend({index:l,create:l,"abstract":l,view:l,edit:l,"delete":l},t.alter);var c=t&&t.templates?t.templates:{},f=t&&t.controllers?t.controllers:{},p=t.query?t.query:"";e.state(u+"Index",t.alter.index({url:"/"+o+p,params:t.params&&t.params.index,templateUrl:c.index?c.index:"formio-helper/resource/index.html",controller:["$scope","$state","$stateParams","$controller",function(e,r,t,n){e.baseName=u;var l={};i.length&&i.forEach(function(e){t.hasOwnProperty(e+"Id")&&(l["data."+e+"._id"]=t[e+"Id"])}),e.currentResource={name:o,queryId:a,formUrl:s,columns:[],gridQuery:l,gridOptions:{}},e.$on("rowView",function(e,o){r.go(u+".view",m(o))}),e.$on("submissionView",function(e,o){r.go(u+".view",m(o))}),e.$on("submissionEdit",function(e,o){r.go(u+".edit",m(o))}),e.$on("submissionDelete",function(e,o){r.go(u+".delete",m(o))}),f.index&&n(f.index,{$scope:e})}]})).state(u+"Create",t.alter.create({url:"/create/"+o+p,params:t.params&&t.params.create,templateUrl:c.create?c.create:"formio-helper/resource/create.html",controller:["$scope","$state","$controller",function(e,r,n){e.baseName=u,e.currentResource={name:o,queryId:a,formUrl:s},e.submission=t.defaultValue?t.defaultValue:{data:{}},e.pageTitle="New "+_.capitalize(o);var l=!1;if(f.create){var c=n(f.create,{$scope:e});l=c.handle||!1}i.length&&(e.hideComponents||(e.hideComponents=[]),e.hideComponents=e.hideComponents.concat(i),i.forEach(function(r){e[r].loadSubmissionPromise.then(function(o){e.submission.data[r]=o})})),l||e.$on("formSubmission",function(o,s){e.currentResource.resource=s,r.go(u+".view",m(s))})}]})).state(u,t.alter["abstract"]({"abstract":!0,url:"/"+o+"/:"+a,templateUrl:c["abstract"]?c["abstract"]:"formio-helper/resource/resource.html",controller:["$scope","$stateParams","Formio","$controller","$http",function(e,r,n,m,l){var c=s,p=t.endpoint;p?p+="/"+r[a]:c+="/submission/"+r[a],e.baseName=u,e.currentResource=e[o]={name:o,queryId:a,formUrl:s,submissionUrl:c,formio:new n(c),resource:{},form:{},href:"/#/"+o+"/"+r[a]+"/",parent:1===i.length?e[i[0]]:{href:"/#/",name:"home"}},e.currentResource.loadFormPromise=e.currentResource.formio.loadForm().then(function(r){return e.currentResource.form=e[o].form=r,r}),t.endpoint?e.currentResource.loadSubmissionPromise=l.get(p,{headers:{"x-jwt-token":n.getToken()}}).then(function(r){return e.currentResource.resource=r.data,r.data}):e.currentResource.loadSubmissionPromise=e.currentResource.formio.loadSubmission().then(function(r){return e.currentResource.resource=e[o].submission=r,r}),f["abstract"]&&m(f["abstract"],{$scope:e})}]})).state(u+".view",t.alter.view({url:"/",params:t.params&&t.params.view,templateUrl:c.view?c.view:"formio-helper/resource/view.html",controller:["$scope","$controller",function(e,r){f.view&&r(f.view,{$scope:e})}]})).state(u+".edit",t.alter.edit({url:"/edit",params:t.params&&t.params.edit,templateUrl:c.edit?c.edit:"formio-helper/resource/edit.html",controller:["$scope","$state","$controller",function(e,r,o){var s=!1;if(i.length&&(e.hideComponents||(e.hideComponents=[]),e.hideComponents=e.hideComponents.concat(i)),f.edit){var t=o(f.edit,{$scope:e});s=t.handle||!1}s||e.$on("formSubmission",function(o,s){e.currentResource.resource=s,r.go(u+".view",m(s))})}]})).state(u+".delete",t.alter["delete"]({url:"/delete",params:t.params&&t.params["delete"],templateUrl:c["delete"]?c["delete"]:"formio-helper/resource/delete.html",controller:["$scope","$state","$controller",function(e,r,s){var t=!1;if(e.resourceName=o,f["delete"]){var n=s(f["delete"],{$scope:e});t=n.handle||!1}t||(e.$on("delete",function(){1===i.length&&"home"!==i[0]?r.go(i[0]+".view"):r.go("home",null,{reload:!0})}),e.$on("cancel",function(){r.go(u+"Index")}))}]}))},$get:function(){return r}}}]).directive("formioForms",function(){return{restrict:"E",replace:!0,scope:{src:"=",base:"=",tag:"=?"},templateUrl:"formio-helper/form/list.html",controller:["$scope","Formio",function(e,r){e.forms=[];var o={type:"form",limit:9999999},s=function(){e.src&&(e.tag&&(o.tags=e.tag),new r(e.src).loadForms({params:o}).then(function(r){e.forms=r}))};e.$watch("src",s)}]}}).provider("FormioForms",["$stateProvider",function(e){var r={};return{register:function(r,o,s){s=s||{};var t=s.templates?s.templates:{},n=s.controllers?s.controllers:{},i="string"==typeof s.field?[s.field]:s.field;i=_.map(i,function(e){return"string"==typeof e?{name:e,stateParam:e+"Id"}:e});var a=s.base?s.base:"";a||(a=r?r+".":""),e.state(a+"formIndex",{url:"/forms",params:s.params&&s.params.index,templateUrl:t.index?t.index:"formio-helper/form/index.html",controller:["$scope","Formio","$controller",function(e,r,t){e.formBase=a,e.formsSrc=o+"/form",e.formsTag=e.formsTag||s.tag,n.index&&t(n.index,{$scope:e})}]}).state(a+"form",{url:"/form/:formId","abstract":!0,templateUrl:t.form?t.form:"formio-helper/form/form.html",controller:["$scope","$stateParams","Formio","$controller",function(e,s,t,i){var u=o+"/form/"+s.formId;e.formBase=a,e.currentForm={name:r,url:u,form:{}},e.currentForm.formio=new t(u),e.currentForm.promise=e.currentForm.formio.loadForm().then(function(r){return e.currentForm.form=r,r}),n.form&&i(n.form,{$scope:e})}]}).state(a+"form.view",{url:"/",params:s.params&&s.params.view,templateUrl:t.view?t.view:"formio-helper/form/view.html",controller:["$scope","$state","FormioUtils","$controller",function(e,r,o,s){e.submission={data:{}};var t=!1;if(i&&i.length&&(e.hideComponents=_.map(i,function(e){return e.name}),e.currentForm.promise.then(function(){i.forEach(function(r){e[r.name].loadSubmissionPromise.then(function(o){_.set(e.submission.data,r.name,o)})})})),n.view){var u=s(n.view,{$scope:e});t=u.handle||!1}t||e.$on("formSubmission",function(){r.go(a+"form.submissions")})}]}).state(a+"form.submissions",{url:"/submissions",params:s.params&&s.params.submissions,templateUrl:t.submissions?t.submissions:"formio-helper/submission/index.html",controller:["$scope","$state","$stateParams","FormioUtils","$controller",function(e,r,o,s,t){e.submissionQuery={},e.submissionColumns=[],i&&i.length&&i.forEach(function(r){e.submissionQuery["data."+r.name+"._id"]=o[r.stateParam]}),e.$on("rowView",function(e,o){r.go(a+"form.submission.view",{formId:o.form,submissionId:o._id})}),n.submissions&&t(n.submissions,{$scope:e}),e.currentForm.promise.then(function(r){localStorage.setItem(r.name,""),e.submissionColumns.length||0!==!Object.keys(e.submissionColumns).length||(s.eachComponent(r.components,function(r){r.key&&r.input&&r.tableView&&(i&&i.length&&!_.find(i,{name:r.key})||e.submissionColumns.push(r.key))}),e.$broadcast("reloadGrid"))})}]}).state(a+"form.submission",{"abstract":!0,url:"/submission/:submissionId",params:s.params&&s.params.submission,templateUrl:t.submission?t.submission:"formio-helper/submission/submission.html",controller:["$scope","$stateParams","Formio","$controller",function(e,r,o,s){e.currentSubmission={url:e.currentForm.url+"/submission/"+r.submissionId,submission:{data:{}}},e.currentSubmission.formio=new o(e.currentSubmission.url),e.currentSubmission.promise=e.currentSubmission.formio.loadSubmission().then(function(r){return e.currentSubmission.submission=r,r}),n.submission&&s(n.submission,{$scope:e})}]}).state(a+"form.submission.view",{url:"/",params:s.params&&s.params.submissionView,templateUrl:t.submissionView?t.submissionView:"formio-helper/submission/view.html",controller:["$scope","$controller",function(e,r){n.submissionView&&r(n.submissionView,{$scope:e})}]}).state(a+"form.submission.edit",{url:"/edit",params:s.params&&s.params.submissionEdit,templateUrl:t.submissionEdit?t.submissionEdit:"formio-helper/submission/edit.html",controller:["$scope","$state","$controller",function(e,r,o){var s=!1;if(n.submissionEdit){var t=o(n.submissionEdit,{$scope:e});s=t.handle||!1}s||e.$on("formSubmission",function(o,s){e.currentSubmission.submission=s,r.go(a+"form.submission.view")})}]}).state(a+"form.submission.delete",{url:"/delete",params:s.params&&s.params.submissionDelete,templateUrl:t.submissionDelete?t.submissionDelete:"formio-helper/submission/delete.html",controller:["$scope","$state","$controller",function(e,r,o){var s=!1;if(n.submissionDelete){var t=o(n.submissionDelete,{$scope:e});s=t.handle||!1}s||(e.$on("delete",function(){r.go(a+"form.submissions")}),e.$on("cancel",function(){r.go(a+"form.submission.view")}))}]})},$get:function(){return r}}}]).provider("FormioAuth",["$stateProvider","FormioProvider",function(e,r){var o=!1,s="auth.login",t=!1,n="home",i=!1,a=!1,u={},m={};return{setForceAuth:function(e){i=e},setStates:function(e,r){s=e,n=r},setAnonRole:function(e){t=e},setAppUrl:function(e){r.setAppUrl(e)},register:function(r,o,s){a||(a=!0,e.state("auth",{"abstract":!0,url:"/auth",templateUrl:"views/user/auth.html"})),s||(s=r),e.state("auth."+r,{url:"/"+s,parent:"auth",templateUrl:"views/user/"+r.toLowerCase()+".html",controller:["$scope","$state","$rootScope",function(e,r,s){e.$on("formSubmission",function(e,t){t&&(s.setUser(t,o),r.go(n))})}]})},$get:["Formio","FormioAlerts","$rootScope","$state","$http","$q",function(e,r,n,a,l,c){return{init:function(){o=!0,n.accessPromise=e.makeStaticRequest(e.getAppUrl()+"/access").then(function(e){return angular.forEach(e.forms,function(e){u[e.name]={},e.submissionAccess.forEach(function(r){u[e.name][r.type]=r.roles})}),m=e.roles,e}),n.user=null,n.isReady=!1,n.userPromise=e.currentUser().then(function(e){return n.setUser(e,localStorage.getItem("formioRole")),e}),n.hasRole=function(e){return e=e.toLowerCase(),n.user?m[e]?-1!==n.user.roles.indexOf(m[e]._id):!1:"anonymous"===e},n.ifRole=function(e){return n.whenReady.then(function(){return n.isAdmin||n.hasRole(e)})},n.assignRoles=function(){for(var e in m)if(m[e].admin&&(n["is"+m[e].title]=n.isAdmin=n.hasRole(e),n.isAdmin))break;for(var e in m)m[e].admin||(n["is"+m[e].title]=n.hasRole(e))},n.whenReady=n.accessPromise.then(n.userPromise).then(function(){return n.isReady=!0,n.assignRoles(),!0}),n.isRole=function(e){return n.role===e.toLowerCase()},n.setUser=function(r,o){r?(n.user=r,localStorage.setItem("formioAppUser",angular.toJson(r))):(n.user=null,localStorage.removeItem("formioAppUser"),e.clearCache(),e.setUser(null)),o?(n.role=o.toLowerCase(),localStorage.setItem("formioAppRole",o)):(n.role=null,localStorage.removeItem("formioAppRole")),n.authenticated=!!e.getToken(),n.assignRoles(),n.$emit("user",{user:n.user,role:n.role})},n.hasAccess=function(e,r){if(!o)return!0;if(Array.isArray(r)||(r=[r]),!u[e])return!1;var s=!1;return r.forEach(function(r){n.user?n.user.roles.forEach(function(o){-1!==u[e][r].indexOf(o)&&(s=!0)}):-1!==u[e][r].indexOf(t)&&(s=!0)}),s},n.ifAccess=function(e,r){return n.whenReady.then(function(){return n.hasAccess(e,r)})};var l=function(){n.setUser(null,null),localStorage.removeItem("formioToken"),a.go(s,{},{reload:!0}),r.addAlert({type:"danger",message:"Your session has expired. Please log in again."})};n.$on("formio.sessionExpired",l),n.logout=function(){n.setUser(null,null),localStorage.removeItem("formioToken"),e.logout().then(function(){a.go(s,{},{reload:!0})})["catch"](l)},n.$on("$stateChangeStart",function(r,o){if(n.authenticated=!!e.getToken(),i){if("auth"===o.name.substr(0,4))return;n.authenticated||(r.preventDefault(),a.go(s,{},{reload:!0}))}}),n.$on("$stateChangeSuccess",function(){n.alerts=r.getAlerts()})}}}]}}]).factory("FormioAlerts",["$rootScope",function(e){var r=[];return{addAlert:function(o){e.alerts.push(o),o.element?angular.element("#form-group-"+o.element).addClass("has-error"):r.push(o)},getAlerts:function(){var e=angular.copy(r);return r.length=0,r=[],e},onError:function o(e){if(e.message)this.addAlert({type:"danger",message:e.message,element:e.path});else{var r=e.hasOwnProperty("errors")?e.errors:e.data.errors;angular.forEach(r,o.bind(this))}}}}]).run(["$templateCache","$rootScope","$state",function(e,r,o){r.isActive=function(e){return-1!==o.current.name.indexOf(e)},e.put("formio-helper/resource/resource.html",'<h2>{{ currentResource.name | capitalize }}</h2>\n<ul class="nav nav-tabs" ng-if="isReady">\n  <li role="presentation" ng-class="{active:isActive(currentResource.name + \'.view\')}" ng-if="hasAccess(currentResource.name, [\'read_all\', \'read_own\'])"><a ui-sref="{{ baseName }}.view()">View</a></li>\n  <li role="presentation" ng-class="{active:isActive(currentResource.name + \'.edit\')}" ng-if="hasAccess(currentResource.name, [\'update_all\', \'update_own\'])"><a ui-sref="{{ baseName }}.edit()">Edit</a></li>\n  <li role="presentation" ng-class="{active:isActive(currentResource.name + \'.delete\')}" ng-if="hasAccess(currentResource.name, [\'delete_all\', \'delete_own\'])"><a ui-sref="{{ baseName }}.delete()">Delete</a></li>\n</ul>\n<div ui-view></div>\n'),e.put("formio-helper/resource/create.html",'<h3 ng-if="pageTitle">{{ pageTitle }}</h3>\n<hr ng-if="pageTitle"></hr>\n<formio src="currentResource.formUrl" submission="submission" hide-components="hideComponents"></formio>\n'),e.put("formio-helper/resource/delete.html",'<formio-delete src="currentResource.submissionUrl" resource-name="resourceName"></formio-delete>\n'),e.put("formio-helper/resource/edit.html",'<formio src="currentResource.submissionUrl" hide-components="hideComponents"></formio>\n'),e.put("formio-helper/resource/index.html",'<formio-grid src="currentResource.formUrl" columns="currentResource.columns" query="currentResource.gridQuery" grid-options="currentResource.gridOptions"></formio-grid><br/>\n<a ui-sref="{{ baseName }}Create()" class="btn btn-primary" ng-if="isReady && hasAccess(currentResource.name, \'create_own\')"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> New {{ currentResource.name | capitalize }}</a>\n'),e.put("formio-helper/resource/view.html",'<formio src="currentResource.submissionUrl" read-only="true"></formio>\n'),e.put("formio-helper/form/list.html",'<ul class="list-group">\n    <li class="list-group-item" ng-repeat="form in forms | orderBy: \'title\'"><a ui-sref="{{ base }}form.view({formId: form._id})">{{ form.title }}</a></li>\n</ul>\n'),e.put("formio-helper/form/index.html",'<formio-forms src="formsSrc" tag="formsTag" base="formBase"></formio-forms>\n'),e.put("formio-helper/form/form.html",'<ul class="nav nav-tabs">\n    <li role="presentation" ng-class="{active:isActive(formBase + \'form.view\')}"><a ui-sref="{{ formBase }}form.view()">Form</a></li>\n    <li role="presentation" ng-class="{active:isActive(formBase + \'form.submissions\')}"><a ui-sref="{{ formBase }}form.submissions()">Submissions</a></li>\n</ul>\n<div ui-view style="margin-top:20px;"></div>\n'),e.put("formio-helper/form/view.html",'<formio form="currentForm.form" form-action="currentForm.url + \'/submission\'" submission="submission" hide-components="hideComponents"></formio>\n'),e.put("formio-helper/submission/index.html",'<formio-grid src="currentForm.url" query="submissionQuery" columns="submissionColumns"></formio-grid>\n\n'),e.put("formio-helper/submission/submission.html",'<ul class="nav nav-pills">\n  <li role="presentation" ng-class="{active:isActive(formBase + \'form.submission.view\')}"><a ui-sref="{{ formBase }}form.submission.view()">View</a></li>\n  <li role="presentation" ng-class="{active:isActive(formBase + \'form.submission.edit\')}"><a ui-sref="{{ formBase }}form.submission.edit()">Edit</a></li>\n  <li role="presentation" ng-class="{active:isActive(formBase + \'form.submission.delete\')}"><a ui-sref="{{ formBase }}form.submission.delete()">Delete</a></li>\n</ul>\n<div ui-view style="margin-top:20px;"></div>\n'),e.put("formio-helper/submission/view.html",'<formio form="currentForm.form" submission="currentSubmission.submission" read-only="true"></formio>\n'),e.put("formio-helper/submission/edit.html",'<formio form="currentForm.form" submission="currentSubmission.submission" form-action="currentSubmission.url"></formio>\n'),e.put("formio-helper/submission/delete.html",'<formio-delete src="currentSubmission.url"></formio-delete>\n')}])},{}]},{},[1]);